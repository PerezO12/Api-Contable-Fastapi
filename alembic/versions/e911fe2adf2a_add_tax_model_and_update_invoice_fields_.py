"""add_tax_model_and_update_invoice_fields_for_odoo_workflow

Revision ID: e911fe2adf2a
Revises: c9dee885b8e1
Create Date: 2025-06-22 23:23:47.494098

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'e911fe2adf2a'
down_revision: Union[str, None] = 'c9dee885b8e1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('invoice_lines', sa.Column('sequence', sa.Integer(), nullable=False, comment='Orden de las líneas'))
    op.alter_column('invoice_lines', 'description',
               existing_type=sa.TEXT(),
               comment='Descripción de la línea',
               existing_nullable=False)
    op.alter_column('invoice_lines', 'account_id',
               existing_type=sa.UUID(),
               comment='Override cuenta ingreso/gasto',
               existing_nullable=True)
    op.alter_column('invoice_lines', 'subtotal',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               comment='quantity * unit_price',
               existing_nullable=False)
    op.alter_column('invoice_lines', 'total_amount',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               comment='subtotal - discount + tax',
               existing_nullable=False)
    op.drop_column('invoice_lines', 'line_number')
    op.drop_column('invoice_lines', 'tax_percentage')
    op.add_column('invoices', sa.Column('third_party_account_id', sa.UUID(), nullable=True, comment='Override cuenta cliente/proveedor'))
    op.add_column('invoices', sa.Column('updated_by_id', sa.UUID(), nullable=True, comment='Quien modificó por última vez'))
    op.alter_column('invoices', 'posted_by_id',
               existing_type=sa.UUID(),
               comment='Quien contabilizó la factura',
               existing_nullable=True)
    op.alter_column('invoices', 'cancelled_by_id',
               existing_type=sa.UUID(),
               comment='Quien canceló la factura',
               existing_nullable=True)
    op.alter_column('invoices', 'posted_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Fecha de contabilización',
               existing_nullable=True)
    op.alter_column('invoices', 'cancelled_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Fecha de cancelación',
               existing_nullable=True)
    op.drop_constraint(op.f('fk_invoices_approved_by_id_users'), 'invoices', type_='foreignkey')
    op.create_foreign_key(op.f('fk_invoices_updated_by_id_users'), 'invoices', 'users', ['updated_by_id'], ['id'])
    op.create_foreign_key(op.f('fk_invoices_third_party_account_id_accounts'), 'invoices', 'accounts', ['third_party_account_id'], ['id'])
    op.drop_column('invoices', 'approved_at')
    op.drop_column('invoices', 'approved_by_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('invoices', sa.Column('approved_by_id', sa.UUID(), autoincrement=False, nullable=True))
    op.add_column('invoices', sa.Column('approved_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.drop_constraint(op.f('fk_invoices_third_party_account_id_accounts'), 'invoices', type_='foreignkey')
    op.drop_constraint(op.f('fk_invoices_updated_by_id_users'), 'invoices', type_='foreignkey')
    op.create_foreign_key(op.f('fk_invoices_approved_by_id_users'), 'invoices', 'users', ['approved_by_id'], ['id'])
    op.alter_column('invoices', 'cancelled_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Fecha de cancelación',
               existing_nullable=True)
    op.alter_column('invoices', 'posted_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Fecha de contabilización',
               existing_nullable=True)
    op.alter_column('invoices', 'cancelled_by_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='Quien canceló la factura',
               existing_nullable=True)
    op.alter_column('invoices', 'posted_by_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='Quien contabilizó la factura',
               existing_nullable=True)
    op.drop_column('invoices', 'updated_by_id')
    op.drop_column('invoices', 'third_party_account_id')
    op.add_column('invoice_lines', sa.Column('tax_percentage', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=False))
    op.add_column('invoice_lines', sa.Column('line_number', sa.INTEGER(), autoincrement=False, nullable=False))
    op.alter_column('invoice_lines', 'total_amount',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               comment=None,
               existing_comment='subtotal - discount + tax',
               existing_nullable=False)
    op.alter_column('invoice_lines', 'subtotal',
               existing_type=sa.NUMERIC(precision=15, scale=2),
               comment=None,
               existing_comment='quantity * unit_price',
               existing_nullable=False)
    op.alter_column('invoice_lines', 'account_id',
               existing_type=sa.UUID(),
               comment=None,
               existing_comment='Override cuenta ingreso/gasto',
               existing_nullable=True)
    op.alter_column('invoice_lines', 'description',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Descripción de la línea',
               existing_nullable=False)
    op.drop_column('invoice_lines', 'sequence')
    # ### end Alembic commands ###