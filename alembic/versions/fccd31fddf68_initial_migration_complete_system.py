"""initial_migration_complete_system

Revision ID: fccd31fddf68
Revises: 
Create Date: 2025-06-15 00:32:07.772860

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'fccd31fddf68'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company_info',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('legal_name', sa.String(length=200), nullable=True),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=200), nullable=True),
    sa.Column('website', sa.String(length=200), nullable=True),
    sa.Column('fiscal_year_start_month', sa.Integer(), nullable=False),
    sa.Column('default_currency', sa.String(length=3), nullable=False),
    sa.Column('logo_path', sa.String(length=500), nullable=True),
    sa.Column('signature_path', sa.String(length=500), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_company_info'))
    )
    op.create_index(op.f('ix_company_info_id'), 'company_info', ['id'], unique=False)
    op.create_table('cost_centers',
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('allows_direct_assignment', sa.Boolean(), nullable=False, comment='Si permite asignaci√≥n directa de transacciones o solo es agrupador'),
    sa.Column('manager_name', sa.String(length=200), nullable=True),
    sa.Column('budget_code', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['parent_id'], ['cost_centers.id'], name=op.f('fk_cost_centers_parent_id_cost_centers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cost_centers'))
    )
    op.create_index(op.f('ix_cost_centers_code'), 'cost_centers', ['code'], unique=True)
    op.create_index(op.f('ix_cost_centers_id'), 'cost_centers', ['id'], unique=False)
    op.create_table('number_sequences',
    sa.Column('sequence_type', sa.String(length=50), nullable=False),
    sa.Column('prefix', sa.String(length=10), nullable=True),
    sa.Column('suffix', sa.String(length=10), nullable=True),
    sa.Column('current_number', sa.Integer(), nullable=False),
    sa.Column('increment', sa.Integer(), nullable=False),
    sa.Column('min_digits', sa.Integer(), nullable=False),
    sa.Column('reset_annually', sa.Boolean(), nullable=False),
    sa.Column('reset_monthly', sa.Boolean(), nullable=False),
    sa.Column('last_reset_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_number_sequences'))
    )
    op.create_index(op.f('ix_number_sequences_id'), 'number_sequences', ['id'], unique=False)
    op.create_index(op.f('ix_number_sequences_sequence_type'), 'number_sequences', ['sequence_type'], unique=True)
    op.create_table('payment_terms',
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payment_terms'))
    )
    op.create_index(op.f('ix_payment_terms_code'), 'payment_terms', ['code'], unique=True)
    op.create_index(op.f('ix_payment_terms_id'), 'payment_terms', ['id'], unique=False)
    op.create_table('third_parties',
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('commercial_name', sa.String(length=200), nullable=True),
    sa.Column('third_party_type', sa.Enum('CUSTOMER', 'SUPPLIER', 'EMPLOYEE', 'SHAREHOLDER', 'BANK', 'GOVERNMENT', 'OTHER', name='thirdpartytype'), nullable=False),
    sa.Column('document_type', sa.Enum('RUT', 'NIT', 'CUIT', 'RFC', 'PASSPORT', 'DNI', 'OTHER', name='documenttype'), nullable=False),
    sa.Column('document_number', sa.String(length=50), nullable=False),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=254), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('mobile', sa.String(length=20), nullable=True),
    sa.Column('website', sa.String(length=255), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('postal_code', sa.String(length=20), nullable=True),
    sa.Column('credit_limit', sa.String(length=20), nullable=True),
    sa.Column('payment_terms', sa.String(length=100), nullable=True),
    sa.Column('discount_percentage', sa.String(length=10), nullable=True),
    sa.Column('bank_name', sa.String(length=200), nullable=True),
    sa.Column('bank_account', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_tax_withholding_agent', sa.Boolean(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('internal_code', sa.String(length=50), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_third_parties'))
    )
    op.create_index(op.f('ix_third_parties_code'), 'third_parties', ['code'], unique=True)
    op.create_index(op.f('ix_third_parties_document_number'), 'third_parties', ['document_number'], unique=False)
    op.create_index(op.f('ix_third_parties_id'), 'third_parties', ['id'], unique=False)
    op.create_index(op.f('ix_third_parties_name'), 'third_parties', ['name'], unique=False)
    op.create_index(op.f('ix_third_parties_third_party_type'), 'third_parties', ['third_party_type'], unique=False)
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('full_name', sa.String(length=100), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'CONTADOR', 'SOLO_LECTURA', name='userrole'), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('password_changed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('force_password_change', sa.Boolean(), nullable=False),
    sa.Column('login_attempts', sa.Integer(), nullable=False),
    sa.Column('locked_until', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_users_created_by_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('accounts',
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('account_type', sa.Enum('ACTIVO', 'PASIVO', 'PATRIMONIO', 'INGRESO', 'GASTO', 'COSTOS', name='accounttype'), nullable=False),
    sa.Column('category', sa.Enum('ACTIVO_CORRIENTE', 'ACTIVO_NO_CORRIENTE', 'PASIVO_CORRIENTE', 'PASIVO_NO_CORRIENTE', 'CAPITAL', 'RESERVAS', 'RESULTADOS', 'INGRESOS_OPERACIONALES', 'INGRESOS_NO_OPERACIONALES', 'GASTOS_OPERACIONALES', 'GASTOS_NO_OPERACIONALES', 'COSTO_VENTAS', 'COSTOS_PRODUCCION', name='accountcategory'), nullable=True),
    sa.Column('cash_flow_category', sa.Enum('OPERATING', 'INVESTING', 'FINANCING', 'CASH_EQUIVALENTS', name='cashflowcategory'), nullable=True),
    sa.Column('parent_id', sa.UUID(), nullable=True),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('allows_movements', sa.Boolean(), nullable=False),
    sa.Column('requires_third_party', sa.Boolean(), nullable=False),
    sa.Column('requires_cost_center', sa.Boolean(), nullable=False),
    sa.Column('balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('debit_balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('credit_balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_accounts_created_by_id_users')),
    sa.ForeignKeyConstraint(['parent_id'], ['accounts.id'], name=op.f('fk_accounts_parent_id_accounts')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_accounts'))
    )
    op.create_index(op.f('ix_accounts_code'), 'accounts', ['code'], unique=True)
    op.create_index(op.f('ix_accounts_id'), 'accounts', ['id'], unique=False)
    op.create_index(op.f('ix_accounts_parent_id'), 'accounts', ['parent_id'], unique=False)
    op.create_table('audit_logs',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.Enum('CREATE', 'UPDATE', 'DELETE', 'VIEW', 'LOGIN', 'LOGOUT', 'POST_ENTRY', 'CANCEL_ENTRY', 'APPROVE_ENTRY', 'EXPORT_REPORT', name='auditaction'), nullable=False),
    sa.Column('resource_type', sa.String(length=100), nullable=False),
    sa.Column('resource_id', sa.UUID(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('level', sa.Enum('INFO', 'WARNING', 'ERROR', 'CRITICAL', name='auditloglevel'), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_audit_logs_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_logs'))
    )
    op.create_index(op.f('ix_audit_logs_id'), 'audit_logs', ['id'], unique=False)
    op.create_index(op.f('ix_audit_logs_timestamp'), 'audit_logs', ['timestamp'], unique=False)
    op.create_table('change_tracking',
    sa.Column('table_name', sa.String(length=100), nullable=False),
    sa.Column('record_id', sa.UUID(), nullable=False),
    sa.Column('field_name', sa.String(length=100), nullable=False),
    sa.Column('old_value', sa.Text(), nullable=True),
    sa.Column('new_value', sa.Text(), nullable=True),
    sa.Column('change_type', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_change_tracking_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_change_tracking'))
    )
    op.create_index(op.f('ix_change_tracking_id'), 'change_tracking', ['id'], unique=False)
    op.create_index(op.f('ix_change_tracking_timestamp'), 'change_tracking', ['timestamp'], unique=False)
    op.create_table('journal_entries',
    sa.Column('number', sa.String(length=50), nullable=False),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('entry_type', sa.Enum('MANUAL', 'AUTOMATIC', 'ADJUSTMENT', 'OPENING', 'CLOSING', 'REVERSAL', name='journalentrytype'), nullable=False),
    sa.Column('entry_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('posting_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING', 'APPROVED', 'POSTED', 'CANCELLED', name='journalentrystatus'), nullable=False),
    sa.Column('total_debit', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_credit', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('approved_by_id', sa.UUID(), nullable=True),
    sa.Column('posted_by_id', sa.UUID(), nullable=True),
    sa.Column('cancelled_by_id', sa.UUID(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('posted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('external_reference', sa.String(length=100), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], name=op.f('fk_journal_entries_approved_by_id_users')),
    sa.ForeignKeyConstraint(['cancelled_by_id'], ['users.id'], name=op.f('fk_journal_entries_cancelled_by_id_users')),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_journal_entries_created_by_id_users')),
    sa.ForeignKeyConstraint(['posted_by_id'], ['users.id'], name=op.f('fk_journal_entries_posted_by_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_journal_entries'))
    )
    op.create_index(op.f('ix_journal_entries_id'), 'journal_entries', ['id'], unique=False)
    op.create_index(op.f('ix_journal_entries_number'), 'journal_entries', ['number'], unique=True)
    op.create_table('payment_schedules',
    sa.Column('payment_terms_id', sa.UUID(), nullable=False),
    sa.Column('sequence', sa.Integer(), nullable=False),
    sa.Column('days', sa.Integer(), nullable=False),
    sa.Column('percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['payment_terms_id'], ['payment_terms.id'], name=op.f('fk_payment_schedules_payment_terms_id_payment_terms')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payment_schedules'))
    )
    op.create_index(op.f('ix_payment_schedules_id'), 'payment_schedules', ['id'], unique=False)
    op.create_table('system_configuration',
    sa.Column('key', sa.String(length=100), nullable=False),
    sa.Column('value', sa.JSON(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('is_user_editable', sa.Boolean(), nullable=False),
    sa.Column('modified_by_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['modified_by_id'], ['users.id'], name=op.f('fk_system_configuration_modified_by_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_system_configuration'))
    )
    op.create_index(op.f('ix_system_configuration_category'), 'system_configuration', ['category'], unique=False)
    op.create_index(op.f('ix_system_configuration_id'), 'system_configuration', ['id'], unique=False)
    op.create_index(op.f('ix_system_configuration_key'), 'system_configuration', ['key'], unique=True)
    op.create_table('user_sessions',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token_jti', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_sessions_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_sessions')),
    sa.UniqueConstraint('token_jti', name=op.f('uq_user_sessions_token_jti'))
    )
    op.create_index(op.f('ix_user_sessions_id'), 'user_sessions', ['id'], unique=False)
    op.create_table('journal_entry_lines',
    sa.Column('journal_entry_id', sa.UUID(), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('debit_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('credit_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('third_party_id', sa.UUID(), nullable=True),
    sa.Column('cost_center_id', sa.UUID(), nullable=True),
    sa.Column('invoice_date', sa.Date(), nullable=True, comment='Fecha de la factura (diferente a fecha de creaci√≥n del asiento)'),
    sa.Column('due_date', sa.Date(), nullable=True, comment='Fecha de vencimiento de la factura'),
    sa.Column('payment_terms_id', sa.UUID(), nullable=True, comment='Condiciones de pago aplicables a esta l√≠nea'),
    sa.Column('line_number', sa.Integer(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], name=op.f('fk_journal_entry_lines_account_id_accounts')),
    sa.ForeignKeyConstraint(['cost_center_id'], ['cost_centers.id'], name=op.f('fk_journal_entry_lines_cost_center_id_cost_centers')),
    sa.ForeignKeyConstraint(['journal_entry_id'], ['journal_entries.id'], name=op.f('fk_journal_entry_lines_journal_entry_id_journal_entries')),
    sa.ForeignKeyConstraint(['payment_terms_id'], ['payment_terms.id'], name=op.f('fk_journal_entry_lines_payment_terms_id_payment_terms')),
    sa.ForeignKeyConstraint(['third_party_id'], ['third_parties.id'], name=op.f('fk_journal_entry_lines_third_party_id_third_parties')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_journal_entry_lines'))
    )
    op.create_index(op.f('ix_journal_entry_lines_id'), 'journal_entry_lines', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_journal_entry_lines_id'), table_name='journal_entry_lines')
    op.drop_table('journal_entry_lines')
    op.drop_index(op.f('ix_user_sessions_id'), table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index(op.f('ix_system_configuration_key'), table_name='system_configuration')
    op.drop_index(op.f('ix_system_configuration_id'), table_name='system_configuration')
    op.drop_index(op.f('ix_system_configuration_category'), table_name='system_configuration')
    op.drop_table('system_configuration')
    op.drop_index(op.f('ix_payment_schedules_id'), table_name='payment_schedules')
    op.drop_table('payment_schedules')
    op.drop_index(op.f('ix_journal_entries_number'), table_name='journal_entries')
    op.drop_index(op.f('ix_journal_entries_id'), table_name='journal_entries')
    op.drop_table('journal_entries')
    op.drop_index(op.f('ix_change_tracking_timestamp'), table_name='change_tracking')
    op.drop_index(op.f('ix_change_tracking_id'), table_name='change_tracking')
    op.drop_table('change_tracking')
    op.drop_index(op.f('ix_audit_logs_timestamp'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_id'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_accounts_parent_id'), table_name='accounts')
    op.drop_index(op.f('ix_accounts_id'), table_name='accounts')
    op.drop_index(op.f('ix_accounts_code'), table_name='accounts')
    op.drop_table('accounts')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_third_parties_third_party_type'), table_name='third_parties')
    op.drop_index(op.f('ix_third_parties_name'), table_name='third_parties')
    op.drop_index(op.f('ix_third_parties_id'), table_name='third_parties')
    op.drop_index(op.f('ix_third_parties_document_number'), table_name='third_parties')
    op.drop_index(op.f('ix_third_parties_code'), table_name='third_parties')
    op.drop_table('third_parties')
    op.drop_index(op.f('ix_payment_terms_id'), table_name='payment_terms')
    op.drop_index(op.f('ix_payment_terms_code'), table_name='payment_terms')
    op.drop_table('payment_terms')
    op.drop_index(op.f('ix_number_sequences_sequence_type'), table_name='number_sequences')
    op.drop_index(op.f('ix_number_sequences_id'), table_name='number_sequences')
    op.drop_table('number_sequences')
    op.drop_index(op.f('ix_cost_centers_id'), table_name='cost_centers')
    op.drop_index(op.f('ix_cost_centers_code'), table_name='cost_centers')
    op.drop_table('cost_centers')
    op.drop_index(op.f('ix_company_info_id'), table_name='company_info')
    op.drop_table('company_info')
    # ### end Alembic commands ###