"""Add currency and exchange rate tables

Revision ID: f1cc3272d3ac
Revises: 66f79c1030a5
Create Date: 2025-07-06 20:44:23.088522

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f1cc3272d3ac'
down_revision: Union[str, None] = '66f79c1030a5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currencies',
    sa.Column('code', sa.String(length=3), nullable=False, comment='Código ISO 4217 de la moneda (USD, EUR, etc.)'),
    sa.Column('name', sa.String(length=100), nullable=False, comment='Nombre completo de la moneda'),
    sa.Column('symbol', sa.String(length=10), nullable=True, comment='Símbolo de la moneda ($, €, etc.)'),
    sa.Column('decimal_places', sa.Integer(), nullable=False, comment='Número de decimales para esta moneda'),
    sa.Column('is_active', sa.Boolean(), nullable=False, comment='Si la moneda está activa para uso'),
    sa.Column('country_code', sa.String(length=2), nullable=True, comment='Código ISO del país principal (opcional)'),
    sa.Column('notes', sa.String(length=500), nullable=True, comment='Notas adicionales sobre la moneda'),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_currencies'))
    )
    op.create_index(op.f('ix_currencies_code'), 'currencies', ['code'], unique=True)
    op.create_index(op.f('ix_currencies_id'), 'currencies', ['id'], unique=False)
    op.create_table('exchange_rates',
    sa.Column('currency_id', sa.UUID(), nullable=False, comment='ID de la moneda'),
    sa.Column('rate', sa.Numeric(precision=15, scale=6), nullable=False, comment='Tasa de cambio: 1 unidad de esta moneda = rate unidades de moneda base'),
    sa.Column('rate_date', sa.Date(), nullable=False, comment='Fecha de vigencia del tipo de cambio'),
    sa.Column('source', sa.String(length=50), nullable=False, comment='Origen del tipo de cambio (manual, api_import, etc.)'),
    sa.Column('provider', sa.String(length=100), nullable=True, comment='Proveedor de la tasa (si es automática)'),
    sa.Column('notes', sa.String(length=500), nullable=True, comment='Notas adicionales sobre este tipo de cambio'),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['currency_id'], ['currencies.id'], name=op.f('fk_exchange_rates_currency_id_currencies')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_exchange_rates')),
    sa.UniqueConstraint('currency_id', 'rate_date', name='uq_exchange_rates_currency_date')
    )
    op.create_index(op.f('ix_exchange_rates_currency_id'), 'exchange_rates', ['currency_id'], unique=False)
    op.create_index(op.f('ix_exchange_rates_id'), 'exchange_rates', ['id'], unique=False)
    op.create_index(op.f('ix_exchange_rates_rate_date'), 'exchange_rates', ['rate_date'], unique=False)
    
    # Agregar campo base_currency_id a company_settings
    op.add_column('company_settings', sa.Column('base_currency_id', sa.UUID(), nullable=True, comment='Moneda base de la empresa para reportes y saldos'))
    op.create_foreign_key(op.f('fk_company_settings_base_currency_id_currencies'), 'company_settings', 'currencies', ['base_currency_id'], ['id'])
    
    # Agregar campos multi-currency a journal_entry_lines
    op.add_column('journal_entry_lines', sa.Column('currency_id', sa.UUID(), nullable=True, comment='Moneda de la transacción original (si es diferente a la moneda base)'))
    op.add_column('journal_entry_lines', sa.Column('amount_currency', sa.Numeric(precision=15, scale=2), nullable=True, comment='Importe en la moneda original de la transacción'))
    op.add_column('journal_entry_lines', sa.Column('exchange_rate_id', sa.UUID(), nullable=True, comment='Tipo de cambio utilizado para la conversión'))
    op.create_foreign_key(op.f('fk_journal_entry_lines_exchange_rate_id_exchange_rates'), 'journal_entry_lines', 'exchange_rates', ['exchange_rate_id'], ['id'])
    op.create_foreign_key(op.f('fk_journal_entry_lines_currency_id_currencies'), 'journal_entry_lines', 'currencies', ['currency_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_journal_entry_lines_currency_id_currencies'), 'journal_entry_lines', type_='foreignkey')
    op.drop_constraint(op.f('fk_journal_entry_lines_exchange_rate_id_exchange_rates'), 'journal_entry_lines', type_='foreignkey')
    op.drop_column('journal_entry_lines', 'exchange_rate_id')
    op.drop_column('journal_entry_lines', 'amount_currency')
    op.drop_column('journal_entry_lines', 'currency_id')
    
    # Remover campo base_currency_id de company_settings
    op.drop_constraint(op.f('fk_company_settings_base_currency_id_currencies'), 'company_settings', type_='foreignkey')
    op.drop_column('company_settings', 'base_currency_id')
    
    op.drop_index(op.f('ix_exchange_rates_rate_date'), table_name='exchange_rates')
    op.drop_index(op.f('ix_exchange_rates_id'), table_name='exchange_rates')
    op.drop_index(op.f('ix_exchange_rates_currency_id'), table_name='exchange_rates')
    op.drop_table('exchange_rates')
    op.drop_index(op.f('ix_currencies_id'), table_name='currencies')
    op.drop_index(op.f('ix_currencies_code'), table_name='currencies')
    op.drop_table('currencies')
    # ### end Alembic commands ###