"""Add payment invoice and banking system tables

Revision ID: c9dee885b8e1
Revises: aef172401712
Create Date: 2025-06-22 19:05:50.540516

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c9dee885b8e1'
down_revision: Union[str, None] = 'aef172401712'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bank_extracts',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('account_id', sa.UUID(), nullable=False),
    sa.Column('statement_date', sa.Date(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('starting_balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('ending_balance', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('status', sa.Enum('IMPORTED', 'PROCESSING', 'RECONCILED', 'CLOSED', name='bankextractstatus'), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('file_hash', sa.String(length=64), nullable=True, comment='Hash MD5 del archivo para evitar duplicados'),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('imported_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('reconciled_by_id', sa.UUID(), nullable=True),
    sa.Column('reconciled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], name=op.f('fk_bank_extracts_account_id_accounts')),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_bank_extracts_created_by_id_users')),
    sa.ForeignKeyConstraint(['reconciled_by_id'], ['users.id'], name=op.f('fk_bank_extracts_reconciled_by_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bank_extracts'))
    )
    op.create_index(op.f('ix_bank_extracts_account_id'), 'bank_extracts', ['account_id'], unique=False)
    op.create_index(op.f('ix_bank_extracts_id'), 'bank_extracts', ['id'], unique=False)
    op.create_table('invoices',
    sa.Column('number', sa.String(length=50), nullable=False),
    sa.Column('internal_reference', sa.String(length=100), nullable=True),
    sa.Column('external_reference', sa.String(length=100), nullable=True, comment='Referencia externa (número de factura del proveedor)'),
    sa.Column('invoice_type', sa.Enum('CUSTOMER_INVOICE', 'SUPPLIER_INVOICE', 'CREDIT_NOTE', 'DEBIT_NOTE', name='invoicetype'), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING', 'APPROVED', 'POSTED', 'PAID', 'PARTIALLY_PAID', 'OVERDUE', 'CANCELLED', name='invoicestatus'), nullable=False),
    sa.Column('third_party_id', sa.UUID(), nullable=False),
    sa.Column('invoice_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=False),
    sa.Column('payment_terms_id', sa.UUID(), nullable=True),
    sa.Column('subtotal', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('tax_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('discount_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('paid_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('outstanding_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('exchange_rate', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('cost_center_id', sa.UUID(), nullable=True),
    sa.Column('journal_entry_id', sa.UUID(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('approved_by_id', sa.UUID(), nullable=True),
    sa.Column('posted_by_id', sa.UUID(), nullable=True),
    sa.Column('cancelled_by_id', sa.UUID(), nullable=True),
    sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('posted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['approved_by_id'], ['users.id'], name=op.f('fk_invoices_approved_by_id_users')),
    sa.ForeignKeyConstraint(['cancelled_by_id'], ['users.id'], name=op.f('fk_invoices_cancelled_by_id_users')),
    sa.ForeignKeyConstraint(['cost_center_id'], ['cost_centers.id'], name=op.f('fk_invoices_cost_center_id_cost_centers')),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_invoices_created_by_id_users')),
    sa.ForeignKeyConstraint(['journal_entry_id'], ['journal_entries.id'], name=op.f('fk_invoices_journal_entry_id_journal_entries')),
    sa.ForeignKeyConstraint(['payment_terms_id'], ['payment_terms.id'], name=op.f('fk_invoices_payment_terms_id_payment_terms')),
    sa.ForeignKeyConstraint(['posted_by_id'], ['users.id'], name=op.f('fk_invoices_posted_by_id_users')),
    sa.ForeignKeyConstraint(['third_party_id'], ['third_parties.id'], name=op.f('fk_invoices_third_party_id_third_parties')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_invoices'))
    )
    op.create_index(op.f('ix_invoices_id'), 'invoices', ['id'], unique=False)
    op.create_index(op.f('ix_invoices_number'), 'invoices', ['number'], unique=True)
    op.create_index(op.f('ix_invoices_third_party_id'), 'invoices', ['third_party_id'], unique=False)
    op.create_table('payments',
    sa.Column('number', sa.String(length=50), nullable=False),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('external_reference', sa.String(length=100), nullable=True, comment='Referencia externa (número de cheque, transacción, etc.)'),
    sa.Column('payment_type', sa.Enum('CUSTOMER_PAYMENT', 'SUPPLIER_PAYMENT', 'INTERNAL_TRANSFER', 'ADVANCE_PAYMENT', 'REFUND', name='paymenttype'), nullable=False),
    sa.Column('payment_method', sa.Enum('CASH', 'CHECK', 'BANK_TRANSFER', 'CREDIT_CARD', 'DEBIT_CARD', 'ELECTRONIC', 'OTHER', name='paymentmethod'), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PENDING', 'CONFIRMED', 'POSTED', 'RECONCILED', 'CANCELLED', name='paymentstatus'), nullable=False),
    sa.Column('third_party_id', sa.UUID(), nullable=False),
    sa.Column('payment_date', sa.Date(), nullable=False),
    sa.Column('value_date', sa.Date(), nullable=True, comment='Fecha valor (fecha efectiva del pago)'),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('allocated_amount', sa.Numeric(precision=15, scale=2), nullable=False, comment='Monto asignado a facturas'),
    sa.Column('unallocated_amount', sa.Numeric(precision=15, scale=2), nullable=False, comment='Monto no asignado'),
    sa.Column('currency_code', sa.String(length=3), nullable=False),
    sa.Column('exchange_rate', sa.Numeric(precision=10, scale=4), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=False, comment='Cuenta de efectivo/banco donde se recibió/hizo el pago'),
    sa.Column('bank_account_number', sa.String(length=50), nullable=True),
    sa.Column('check_number', sa.String(length=50), nullable=True),
    sa.Column('transaction_id', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('journal_entry_id', sa.UUID(), nullable=True),
    sa.Column('is_reconciled', sa.Boolean(), nullable=False),
    sa.Column('reconciled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('confirmed_by_id', sa.UUID(), nullable=True),
    sa.Column('posted_by_id', sa.UUID(), nullable=True),
    sa.Column('cancelled_by_id', sa.UUID(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('posted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], name=op.f('fk_payments_account_id_accounts')),
    sa.ForeignKeyConstraint(['cancelled_by_id'], ['users.id'], name=op.f('fk_payments_cancelled_by_id_users')),
    sa.ForeignKeyConstraint(['confirmed_by_id'], ['users.id'], name=op.f('fk_payments_confirmed_by_id_users')),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_payments_created_by_id_users')),
    sa.ForeignKeyConstraint(['journal_entry_id'], ['journal_entries.id'], name=op.f('fk_payments_journal_entry_id_journal_entries')),
    sa.ForeignKeyConstraint(['posted_by_id'], ['users.id'], name=op.f('fk_payments_posted_by_id_users')),
    sa.ForeignKeyConstraint(['third_party_id'], ['third_parties.id'], name=op.f('fk_payments_third_party_id_third_parties')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payments'))
    )
    op.create_index(op.f('ix_payments_id'), 'payments', ['id'], unique=False)
    op.create_index(op.f('ix_payments_number'), 'payments', ['number'], unique=True)
    op.create_index(op.f('ix_payments_third_party_id'), 'payments', ['third_party_id'], unique=False)
    op.create_table('bank_extract_lines',
    sa.Column('bank_extract_id', sa.UUID(), nullable=False),
    sa.Column('sequence', sa.Integer(), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('value_date', sa.Date(), nullable=True),
    sa.Column('reference', sa.String(length=100), nullable=True),
    sa.Column('bank_reference', sa.String(length=100), nullable=True),
    sa.Column('check_number', sa.String(length=50), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('additional_info', sa.Text(), nullable=True),
    sa.Column('line_type', sa.Enum('DEBIT', 'CREDIT', 'TRANSFER', 'CHARGE', 'INTEREST', 'OTHER', name='bankextractlinetype'), nullable=False),
    sa.Column('debit_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('credit_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('balance', sa.Numeric(precision=15, scale=2), nullable=True),
    sa.Column('partner_name', sa.String(length=255), nullable=True),
    sa.Column('partner_account', sa.String(length=50), nullable=True),
    sa.Column('is_reconciled', sa.Boolean(), nullable=False),
    sa.Column('reconciled_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('pending_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('reconciled_by_id', sa.UUID(), nullable=True),
    sa.Column('reconciled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['bank_extract_id'], ['bank_extracts.id'], name=op.f('fk_bank_extract_lines_bank_extract_id_bank_extracts')),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_bank_extract_lines_created_by_id_users')),
    sa.ForeignKeyConstraint(['reconciled_by_id'], ['users.id'], name=op.f('fk_bank_extract_lines_reconciled_by_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bank_extract_lines'))
    )
    op.create_index(op.f('ix_bank_extract_lines_bank_extract_id'), 'bank_extract_lines', ['bank_extract_id'], unique=False)
    op.create_index(op.f('ix_bank_extract_lines_id'), 'bank_extract_lines', ['id'], unique=False)
    op.create_table('invoice_lines',
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.Column('line_number', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=True),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('quantity', sa.Numeric(precision=15, scale=4), nullable=False),
    sa.Column('unit_price', sa.Numeric(precision=15, scale=4), nullable=False),
    sa.Column('discount_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('discount_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('tax_percentage', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('tax_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('subtotal', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('total_amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('account_id', sa.UUID(), nullable=True),
    sa.Column('cost_center_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], name=op.f('fk_invoice_lines_account_id_accounts')),
    sa.ForeignKeyConstraint(['cost_center_id'], ['cost_centers.id'], name=op.f('fk_invoice_lines_cost_center_id_cost_centers')),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], name=op.f('fk_invoice_lines_invoice_id_invoices')),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_invoice_lines_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_invoice_lines'))
    )
    op.create_index(op.f('ix_invoice_lines_id'), 'invoice_lines', ['id'], unique=False)
    op.create_index(op.f('ix_invoice_lines_invoice_id'), 'invoice_lines', ['invoice_id'], unique=False)
    op.create_table('payment_invoices',
    sa.Column('payment_id', sa.UUID(), nullable=False),
    sa.Column('invoice_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('allocation_date', sa.Date(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_payment_invoices_created_by_id_users')),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], name=op.f('fk_payment_invoices_invoice_id_invoices')),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], name=op.f('fk_payment_invoices_payment_id_payments')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_payment_invoices'))
    )
    op.create_index(op.f('ix_payment_invoices_id'), 'payment_invoices', ['id'], unique=False)
    op.create_index(op.f('ix_payment_invoices_invoice_id'), 'payment_invoices', ['invoice_id'], unique=False)
    op.create_index(op.f('ix_payment_invoices_payment_id'), 'payment_invoices', ['payment_id'], unique=False)
    op.create_table('bank_reconciliations',
    sa.Column('extract_line_id', sa.UUID(), nullable=False),
    sa.Column('payment_id', sa.UUID(), nullable=True),
    sa.Column('invoice_id', sa.UUID(), nullable=True),
    sa.Column('amount', sa.Numeric(precision=15, scale=2), nullable=False),
    sa.Column('reconciliation_type', sa.Enum('PAYMENT', 'INVOICE', 'MANUAL', 'AUTOMATIC', name='reconciliationtype'), nullable=False),
    sa.Column('reconciliation_date', sa.Date(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('is_confirmed', sa.Boolean(), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('confirmed_by_id', sa.UUID(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['confirmed_by_id'], ['users.id'], name=op.f('fk_bank_reconciliations_confirmed_by_id_users')),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name=op.f('fk_bank_reconciliations_created_by_id_users')),
    sa.ForeignKeyConstraint(['extract_line_id'], ['bank_extract_lines.id'], name=op.f('fk_bank_reconciliations_extract_line_id_bank_extract_lines')),
    sa.ForeignKeyConstraint(['invoice_id'], ['invoices.id'], name=op.f('fk_bank_reconciliations_invoice_id_invoices')),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], name=op.f('fk_bank_reconciliations_payment_id_payments')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_bank_reconciliations'))
    )
    op.create_index(op.f('ix_bank_reconciliations_extract_line_id'), 'bank_reconciliations', ['extract_line_id'], unique=False)
    op.create_index(op.f('ix_bank_reconciliations_id'), 'bank_reconciliations', ['id'], unique=False)
    op.create_index(op.f('ix_bank_reconciliations_invoice_id'), 'bank_reconciliations', ['invoice_id'], unique=False)
    op.create_index(op.f('ix_bank_reconciliations_payment_id'), 'bank_reconciliations', ['payment_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_bank_reconciliations_payment_id'), table_name='bank_reconciliations')
    op.drop_index(op.f('ix_bank_reconciliations_invoice_id'), table_name='bank_reconciliations')
    op.drop_index(op.f('ix_bank_reconciliations_id'), table_name='bank_reconciliations')
    op.drop_index(op.f('ix_bank_reconciliations_extract_line_id'), table_name='bank_reconciliations')
    op.drop_table('bank_reconciliations')
    op.drop_index(op.f('ix_payment_invoices_payment_id'), table_name='payment_invoices')
    op.drop_index(op.f('ix_payment_invoices_invoice_id'), table_name='payment_invoices')
    op.drop_index(op.f('ix_payment_invoices_id'), table_name='payment_invoices')
    op.drop_table('payment_invoices')
    op.drop_index(op.f('ix_invoice_lines_invoice_id'), table_name='invoice_lines')
    op.drop_index(op.f('ix_invoice_lines_id'), table_name='invoice_lines')
    op.drop_table('invoice_lines')
    op.drop_index(op.f('ix_bank_extract_lines_id'), table_name='bank_extract_lines')
    op.drop_index(op.f('ix_bank_extract_lines_bank_extract_id'), table_name='bank_extract_lines')
    op.drop_table('bank_extract_lines')
    op.drop_index(op.f('ix_payments_third_party_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_number'), table_name='payments')
    op.drop_index(op.f('ix_payments_id'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_invoices_third_party_id'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_number'), table_name='invoices')
    op.drop_index(op.f('ix_invoices_id'), table_name='invoices')
    op.drop_table('invoices')
    op.drop_index(op.f('ix_bank_extracts_id'), table_name='bank_extracts')
    op.drop_index(op.f('ix_bank_extracts_account_id'), table_name='bank_extracts')
    op.drop_table('bank_extracts')
    # ### end Alembic commands ###