name: Tests de Integración

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpassword
          POSTGRES_USER: testuser
          POSTGRES_DB: testdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Configurar variables de entorno para tests
      run: |
        echo "DATABASE_URL=postgresql://testuser:testpassword@localhost:5432/testdb" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-for-github-actions" >> $GITHUB_ENV
        echo "ACCESS_TOKEN_EXPIRE_MINUTES=30" >> $GITHUB_ENV

    - name: Ejecutar tests de autenticación
      run: |
        python -m pytest tests/integration/test_auth_endpoints.py -v

    - name: Ejecutar tests de usuarios
      run: |
        python -m pytest tests/integration/test_user_endpoints.py -v

    - name: Ejecutar tests de cuentas
      run: |
        python -m pytest tests/integration/test_account_endpoints.py -v

    - name: Ejecutar tests de asientos contables
      run: |
        python -m pytest tests/integration/test_journal_entry_endpoints.py -v

    - name: Ejecutar tests de reportes
      run: |
        python -m pytest tests/integration/test_report_endpoints.py -v

    - name: Ejecutar tests end-to-end
      run: |
        python -m pytest tests/integration/test_end_to_end_workflow.py -v -s

    - name: Ejecutar todos los tests con cobertura
      run: |
        python -m pytest tests/integration/ --cov=app --cov-report=xml --cov-report=term-missing

    - name: Subir reporte de cobertura a Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: integration
        name: codecov-integration

    - name: Archivar reportes de cobertura
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-reports
        path: |
          htmlcov/
          coverage.xml

  test-performance:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout código
      uses: actions/checkout@v4

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'

    - name: Instalar dependencias
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-benchmark

    - name: Tests de performance (solo tests rápidos)
      run: |
        python -m pytest tests/integration/ -m "not slow" --benchmark-only --benchmark-json=benchmark.json

    - name: Archivar resultados de performance
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: benchmark-results
        path: benchmark.json
